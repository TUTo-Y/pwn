寻找系统调用号
    constants.SYS_read
    constants.SYS_write
    ...



查找溢出
    >>> cyclic(20)
        b'aaaabaaacaaadaaaeaaa'
    >>> cyclic_find(b'faab')
        120



elf.symbols['write']
elf.got['write']
elf.plt['write']



指定加载glibc
    p = process(['./ld-2.23.so','./pwn'], env = {'LD_PRELOAD' : './libc-2.23.so'})



Frame = SigreturnFrame() # SROP设置寄存器



shellcode测信道攻击
没有输出，使用无限循环
try:
    p.recv(timeout=0.3)
    p.close()
    # 如果可以执行到这里，说明程序保持无限循环
    break
except:
    # 不能执行到这里，说明recv出现错误，程序提前退出
    p.close()
本地快速测试
# 检查进程是否结束
if p.poll() is not None:
    # 进程已经结束
    p.close()
else:
     # 进程未结束